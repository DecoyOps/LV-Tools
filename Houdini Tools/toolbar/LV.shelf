<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="LV" label="LV Shelf">
    <memberTool name="ConnectToOutput"/>
    <memberTool name="auto variant pieces"/>
    <memberTool name="LV Key Transforms"/>
    <memberTool name="LV Export"/>
    <memberTool name="LVArrange"/>
  </toolshelf>

  <toolshelf name="LVShelf" label="LV Shelf">
    <memberTool name="LVArrange0"/>
    <memberTool name="LV_Color"/>
    <memberTool name="LV Breakdown"/>
    <memberTool name="Shape"/>
    <memberTool name="LV Controller"/>
    <memberTool name="test"/>
  </toolshelf>

  <tool name="LVArrange0" label="LV Arrange" icon="D:/Assets/Houdini Packages/LV Tools/assets/Icon.svg">
    <script scriptType="python"><![CDATA[]]></script>
  </tool>

  <tool name="LVArrange" label="LV Arrange" icon="D:/Assets/Houdini Packages/LV Tools/assets/Icon.svg">
    <script scriptType="python"><![CDATA[import os

obj = hou.node('/obj')

centerPos = hou.Vector2(0,0)

nodes = hou.selectedNodes()

for index, n in enumerate(nodes):
    if index == 0:
        nodePos = n.position()
        centerPos -= nodePos
    else:
        ss = ""
        fb = ""
        ud = ""
    
        node = n
        
        node.setGenericFlag(hou.nodeFlag.DisplayComment,True)
        
        posx = node.parm('tx').eval()
        posz = node.parm('tz').eval() * -1
        posy = node.parm('ty').eval()
        
        if node.type().name() == 'rslight':
            intensity = str(node.parm('RSL_intensityMultiplier').eval())
            exposure = str(node.parm('Light1_exposure').eval())
            spread = str(node.parm('RSL_spread').eval())
        
        pos = hou.Vector2(posx,posz)
        newPos = pos.normalized()
        newPos *= 3 + (pos.length()/12)
        
        if posx < 0:
            ss = "Left"
        elif posx == 0:
            ss = ""
        else:
            ss = "Right"
            
        if posz > 0:
            fb = "Back"
        elif posz == 0:
            fb = ""
        else:
            fb = "Front"
            
        if posy > 0:
            ud = "Top"
        elif posy == 0:
            ud = ""
        else:
            ud = "Bottom"
        
        node.setPosition(hou.Vector2(newPos[0]-centerPos[0],newPos[1]-centerPos[1]))
        
        node.setName(ud + fb + ss + "_" + node.type().name(), True)
        if node.type().name() == 'rslight':
            node.setComment('Intensity: ' + intensity + os.linesep +
            'Exposure: ' + exposure + os.linesep +
            'Spread: ' + spread)]]></script>
  </tool>

  <tool name="LV_Color" label="LV Color" icon="SOP_color">
    <script scriptType="python"><![CDATA[nodes = hou.selectedNodes()

sCol = hou.selectedNodes()[0].color()

color = sCol

def handleColorChange(color, alpha):
    color = color
    
    nodes = hou.selectedNodes()
    
    for index, n in enumerate(nodes):
        node = n
        if(color):   
            n.setColor(color)
        else:
            pass

hou.ui.openColorEditor(
    handleColorChange,
    include_alpha=False,
    initial_color=sCol)



    ]]></script>
  </tool>
</shelfDocument>
